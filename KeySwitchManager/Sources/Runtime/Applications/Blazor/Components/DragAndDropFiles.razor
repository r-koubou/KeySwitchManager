<MudStack Style="width: 100%">
    <MudFileUpload T="IReadOnlyList<IBrowserFile>" Accept="@Accept" OnFilesChanged="OnInputFileChanged" AppendMultipleFiles Hidden="false" Class="flex-1" InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0"
                   @ondragenter="@SetDragClass" @ondragleave="@ClearDragClass" @ondragend="@ClearDragClass">
        <ButtonTemplate>
            <MudPaper Height="200px" Outlined="true" Class="@dragClass">
                <MudText Typo="Typo.h6">Drag and drop files here or click</MudText>
                @foreach( var file in displayFileNames )
                {
                    <MudChip Color="Color.Dark" Text="@file"/>
                }
            </MudPaper>
        </ButtonTemplate>
    </MudFileUpload>
    <MudToolBar DisableGutters="true" Class="gap-4">
        <MudButton OnClick="Clear" Disabled="@(!displayFileNames.Any())" Color="Color.Error" Variant="Variant.Filled">Clear</MudButton>
    </MudToolBar>
</MudStack>

@code
{
    [Parameter] public string Accept { get; set; } = string.Empty;
    [Parameter] public EventCallback<(IReadOnlyList<IBrowserFile> browserFiles, List<string> displayFileNames)> OnFilesChanged { get; set; }
    [Parameter] public EventCallback OnClear { get; set; }

    private const string DefaultDragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full z-10";
    private string dragClass = DefaultDragClass;
    private readonly List<string> displayFileNames = new();

    private async Task OnInputFileChanged( InputFileChangeEventArgs e )
    {
        ClearDragClass();
        var files = e.GetMultipleFiles();

        var newDisplayFileNames = new List<string>();

        displayFileNames.Clear();
        await OnFilesChanged.InvokeAsync( ( files, newDisplayFileNames ) );
        displayFileNames.AddRange( newDisplayFileNames );
    }

    private async Task Clear()
    {
        ClearDragClass();
        displayFileNames.Clear();
        await OnClear.InvokeAsync();
        await Task.Delay( 100 );
    }

    private void SetDragClass()
    {
        dragClass = $"{DefaultDragClass} mud-border-primary";
    }

    private void ClearDragClass()
    {
        dragClass = DefaultDragClass;
    }
}
